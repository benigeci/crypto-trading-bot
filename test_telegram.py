"""
Telegram notification test script
"""
import asyncio
import sys
import os
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent))

from dotenv import load_dotenv
from logger import setup_logger

logger = setup_logger('telegram_test', log_level='INFO')

async def test_telegram():
    """Test Telegram bot notifications"""
    print("="*70)
    print("üì± Telegram √ârtes√≠t√©s Teszt")
    print("="*70)
    print()
    
    # Load environment variables
    load_dotenv()
    
    token = os.getenv('TELEGRAM_BOT_TOKEN')
    chat_id = os.getenv('TELEGRAM_CHAT_ID')
    
    if not token:
        print("‚ùå HIBA: TELEGRAM_BOT_TOKEN nincs be√°ll√≠tva a .env f√°jlban!")
        print()
        print("Ellen≈ërizd a .env f√°jlt:")
        print("  TELEGRAM_BOT_TOKEN=your_token_here")
        return 1
    
    print(f"‚úÖ Telegram Token bet√∂ltve")
    print(f"‚úÖ Chat ID: {chat_id if chat_id else '(nincs be√°ll√≠tva)'}")
    print()
    
    try:
        # Try to import telegram bot
        try:
            from telegram_bot import TradingBot
            print("‚úÖ telegram_bot modul import√°lva")
        except ImportError as e:
            print(f"‚ö†Ô∏è  telegram_bot.py nem tal√°lhat√≥, pr√≥b√°lom k√∂zvetlen√ºl...")
            
            # Direct telegram test
            from telegram import Bot
            from telegram.error import TelegramError
            
            print("üì§ Teszt √ºzenet k√ºld√©se...")
            
            bot = Bot(token=token)
            
            message = """
ü§ñ *Telegram Bot Teszt Sikeres!*

‚úÖ A bot csatlakozott
‚úÖ √ârtes√≠t√©sek m≈±k√∂dnek
‚úÖ Chat ID helyes

üìä Trading bot k√©szen √°ll az √©rtes√≠t√©sek k√ºld√©s√©re!

_Ez egy teszt √ºzenet volt._
"""
            
            if chat_id:
                await bot.send_message(
                    chat_id=chat_id,
                    text=message,
                    parse_mode='Markdown'
                )
                print()
                print("‚úÖ Teszt √ºzenet ELK√úLDVE!")
                print(f"   Chat ID: {chat_id}")
            else:
                print()
                print("‚ö†Ô∏è  CHAT_ID nincs be√°ll√≠tva!")
                print("   Az √©rtes√≠t√©sek m≈±k√∂dni fognak, de minden usernek k√ºldi.")
                
                # Get bot info
                me = await bot.get_me()
                print()
                print(f"üì± Bot inform√°ci√≥k:")
                print(f"   N√©v: {me.first_name}")
                print(f"   Username: @{me.username}")
                print()
                print("üí° K√∂vetkez≈ë l√©p√©sek:")
                print("   1. Nyisd meg a Telegram-ot")
                print(f"   2. Keresd meg: @{me.username}")
                print("   3. K√ºldj neki egy √ºzenetet: /start")
                print("   4. Akkor fog tudni neked √ºzenni!")
            
            print()
            print("="*70)
            print("‚úÖ Telegram Teszt SIKERES!")
            print("="*70)
            return 0
            
    except Exception as e:
        logger.exception(f"Telegram teszt hiba: {e}")
        print()
        print(f"‚ùå HIBA: {e}")
        print()
        print("üîç Lehets√©ges okok:")
        print("  1. Helytelen token a .env f√°jlban")
        print("  2. Bot nem l√©tezik vagy le van tiltva")
        print("  3. Nincs internet kapcsolat")
        print("  4. python-telegram-bot nincs telep√≠tve")
        print()
        print("üîß Megold√°s:")
        print("  1. Ellen≈ërizd a .env f√°jlt")
        print("  2. Futtasd: pip install python-telegram-bot")
        print()
        return 1

if __name__ == '__main__':
    try:
        exit_code = asyncio.run(test_telegram())
        sys.exit(exit_code)
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  Teszt megszak√≠tva")
        sys.exit(0)
